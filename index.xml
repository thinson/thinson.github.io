<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kang's Blog💻</title><link>https://thinson.github.io/</link><description>Recent content on Kang's Blog💻</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 17 Jan 2022 17:21:00 +0800</lastBuildDate><atom:link href="https://thinson.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>关于我</title><link>https://thinson.github.io/about/</link><pubDate>Mon, 17 Jan 2022 17:39:52 +0800</pubDate><guid>https://thinson.github.io/about/</guid><description>&lt;p>研二在读，主要在做遥感。喜欢硬件和代码。&lt;/p></description></item><item><title>Hello World!</title><link>https://thinson.github.io/post/hello-world/</link><pubDate>Mon, 17 Jan 2022 17:21:00 +0800</pubDate><guid>https://thinson.github.io/post/hello-world/</guid><description>&lt;p>之前的博客闲置太久，源文件丢失，所以用hugo重新组织了我的博客，欢迎大家!&lt;/p></description></item><item><title>Linux awk是什么</title><link>https://thinson.github.io/post/awk%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 17 Jan 2022 17:21:00 +0800</pubDate><guid>https://thinson.github.io/post/awk%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;h3 id="awk是什么">awk是什么？&lt;/h3>
&lt;p>&lt;code>awk&lt;/code>其实不仅仅是工具软件，还是一种编程语言。&lt;/p>
&lt;p>用来处理linux系统下的文档&lt;/p>
&lt;h3 id="基本使用">基本使用&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">awk 条件 动作 文件名
&lt;span style="color:#75715e"># 可以没有条件&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{print NR &amp;#34;) &amp;#34; $1}&amp;#39;&lt;/span> demo.txt
&lt;span style="color:#75715e"># 语句用&amp;#39;&amp;#39;隔开，&amp;#39;&amp;#39;内部字符用引号&lt;/span>
&lt;span style="color:#75715e"># NR表示当前行数&lt;/span>
&lt;span style="color:#75715e"># -F 表示分隔符是什么&lt;/span>
awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{if($1&amp;lt;&amp;#34;m&amp;#34;) print NR &amp;#34;&amp;gt;&amp;#34; $1; else print &amp;#34;____&amp;#34;}&amp;#39;&lt;/span> user.txt
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>利用anaconda离线部署python环境</title><link>https://thinson.github.io/post/%E5%88%A9%E7%94%A8anaconda%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2python%E7%8E%AF%E5%A2%83/</link><pubDate>Sat, 01 Jan 2022 17:21:00 +0800</pubDate><guid>https://thinson.github.io/post/%E5%88%A9%E7%94%A8anaconda%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2python%E7%8E%AF%E5%A2%83/</guid><description>&lt;blockquote>
&lt;p>将开发机的&lt;strong>python开发环境&lt;/strong>部署到业务机的&lt;strong>离线生产环境&lt;/strong>通常是比较困难的。python版本，软件包的版本和各种依赖环境都要较为严格的保持一致。如果不是十分小心，很容易就会陷入各种链接错误等。如何比较简便的进行python环境的离线迁移呢？本文基于anaconda的包管理功能，提供一种较为简便的环境迁移方法。&lt;/p>
&lt;/blockquote>
&lt;h3 id="思路">思路&lt;/h3>
&lt;p>思路很简单，就是将 开发环境的虚拟环境文件夹 移动到 生产环境的虚拟环境文件夹。&lt;/p>
&lt;p>需要保证： python的基础版本一致，如3.6对应3.6，后面小版本无所谓。&lt;/p>
&lt;h2 id="流程">流程&lt;/h2>
&lt;h4 id="开发机">开发机&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>开发机使用conda创建好对应的虚拟环境，并安装必要的包。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e"># 创建并激活环境&lt;/span>
conda create -n OCEAN python&lt;span style="color:#f92672">=&lt;/span>3.6
conda activate OCEAN
&lt;span style="color:#75715e"># 安装必要的包&lt;/span>
pip install xxx
conda install xxx
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>开发机器的环境打包&lt;/p>
&lt;p>首先&lt;code>conda info -e&lt;/code>找到对应包的位置。如图，我的环境在&lt;code>/home/wukang/.conda/envs/OCEAN&lt;/code> 目录下。&lt;/p>
&lt;p>&lt;img src="https://gitee.com/kang_wu/pic-bed/raw/master/img/image-20211227175202788.png" alt="image-20211227175202788">&lt;/p>
&lt;p>打包对应的环境，&lt;code>tar cvf OCEAN_ENVS.tar /home/wukang/.conda/envs/OCEAN &lt;/code>，将对应的环境拷贝至U盘。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>至此，物理机的操作已经完成，把需要的代码和上述生成的环境压缩包拷贝至U盘即可。&lt;/p>
&lt;h4 id="业务机">业务机&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>安装anaconda/miniconda。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建和开发机器&lt;strong>同名&lt;/strong>的虚拟环境，一定要同名，否则后续会出问题。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e"># 从base环境克隆出和开发环境同名的OCEAN环境&lt;/span>
conda create -n OCEAN --clone base
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>解压环境。&lt;code>tar xvf OCEAN_ENVS.tar /home/xxx/miniconda/envs/ &lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>激活环境。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">source activate OCEAN
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>至此，业务机的环境克隆就已经完成。&lt;/p></description></item><item><title/><link>https://thinson.github.io/post/hello-world/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://thinson.github.io/post/hello-world/</guid><description>&lt;h1 id="hello-world">Hello World!&lt;/h1>
&lt;p>我的第一篇博客&lt;/p></description></item></channel></rss>