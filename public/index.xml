<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kang&#39;s Blog💻</title>
    <link>https://thinson.github.io/</link>
    <description>Recent content on Kang&#39;s Blog💻</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 17 Jan 2022 17:21:00 +0800</lastBuildDate>
    
        <atom:link href="https://thinson.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于我</title>
      <link>https://thinson.github.io/about/</link>
      <pubDate>Mon, 17 Jan 2022 17:39:52 +0800</pubDate>
      
      <guid>https://thinson.github.io/about/</guid>
      
        <description>&lt;p&gt;研二在读，主要在做遥感。喜欢硬件和代码。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://thinson.github.io/post/hello-world/</link>
      <pubDate>Mon, 17 Jan 2022 17:21:00 +0800</pubDate>
      
      <guid>https://thinson.github.io/post/hello-world/</guid>
      
        <description>&lt;p&gt;之前的博客闲置太久，源文件丢失，所以用hugo重新组织了我的博客，欢迎大家。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Linux awk是什么</title>
      <link>https://thinson.github.io/post/awk%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 17 Jan 2022 17:21:00 +0800</pubDate>
      
      <guid>https://thinson.github.io/post/awk%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      
        <description>&lt;h3 id=&#34;awk是什么&#34;&gt;awk是什么？&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt;其实不仅仅是工具软件，还是一种编程语言。&lt;/p&gt;
&lt;p&gt;用来处理linux系统下的文档&lt;/p&gt;
&lt;h3 id=&#34;基本使用&#34;&gt;基本使用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;awk 条件 动作 文件名
&lt;span style=&#34;color:#75715e&#34;&gt;# 可以没有条件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;awk -F &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print NR &amp;#34;) &amp;#34; $1}&amp;#39;&lt;/span&gt; demo.txt
&lt;span style=&#34;color:#75715e&#34;&gt;# 语句用&amp;#39;&amp;#39;隔开，&amp;#39;&amp;#39;内部字符用引号&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# NR表示当前行数&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# -F 表示分隔符是什么&lt;/span&gt;
 awk -F &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{if($1&amp;lt;&amp;#34;m&amp;#34;)  print NR &amp;#34;&amp;gt;&amp;#34; $1; else print &amp;#34;____&amp;#34;}&amp;#39;&lt;/span&gt; user.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>利用anaconda离线部署python环境</title>
      <link>https://thinson.github.io/post/%E5%88%A9%E7%94%A8anaconda%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2python%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sat, 01 Jan 2022 17:21:00 +0800</pubDate>
      
      <guid>https://thinson.github.io/post/%E5%88%A9%E7%94%A8anaconda%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2python%E7%8E%AF%E5%A2%83/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;将开发机的&lt;strong&gt;python开发环境&lt;/strong&gt;部署到业务机的&lt;strong&gt;离线生产环境&lt;/strong&gt;通常是比较困难的。python版本，软件包的版本和各种依赖环境都要较为严格的保持一致。如果不是十分小心，很容易就会陷入各种链接错误等。如何比较简便的进行python环境的离线迁移呢？本文基于anaconda的包管理功能，提供一种较为简便的环境迁移方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;
&lt;p&gt;思路很简单，就是将 开发环境的虚拟环境文件夹 移动到 生产环境的虚拟环境文件夹。&lt;/p&gt;
&lt;p&gt;需要保证： python的基础版本一致，如3.6对应3.6，后面小版本无所谓。&lt;/p&gt;
&lt;h2 id=&#34;流程&#34;&gt;流程&lt;/h2&gt;
&lt;h4 id=&#34;开发机&#34;&gt;开发机&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;开发机使用conda创建好对应的虚拟环境，并安装必要的包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建并激活环境&lt;/span&gt;
conda create -n OCEAN python&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3.6
conda activate OCEAN
&lt;span style=&#34;color:#75715e&#34;&gt;# 安装必要的包&lt;/span&gt;
pip install xxx
conda install xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开发机器的环境打包&lt;/p&gt;
&lt;p&gt;首先&lt;code&gt;conda info -e&lt;/code&gt;找到对应包的位置。如图，我的环境在&lt;code&gt;/home/wukang/.conda/envs/OCEAN&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/kang_wu/pic-bed/raw/master/img/image-20211227175202788.png&#34; alt=&#34;image-20211227175202788&#34;&gt;&lt;/p&gt;
&lt;p&gt;打包对应的环境，&lt;code&gt;tar cvf OCEAN_ENVS.tar /home/wukang/.conda/envs/OCEAN &lt;/code&gt;，将对应的环境拷贝至U盘。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至此，物理机的操作已经完成，把需要的代码和上述生成的环境压缩包拷贝至U盘即可。&lt;/p&gt;
&lt;h4 id=&#34;业务机&#34;&gt;业务机&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装anaconda/miniconda。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建和开发机器&lt;strong&gt;同名&lt;/strong&gt;的虚拟环境，一定要同名，否则后续会出问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 从base环境克隆出和开发环境同名的OCEAN环境&lt;/span&gt;
conda create -n OCEAN --clone base
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压环境。&lt;code&gt;tar xvf OCEAN_ENVS.tar /home/xxx/miniconda/envs/  &lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;激活环境。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;source activate OCEAN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至此，业务机的环境克隆就已经完成。&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
